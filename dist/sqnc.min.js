!function webpackUniversalModuleDefinition(r,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.sqnc=e():r.sqnc=e()}(this,function(){return function(r){function __webpack_require__(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return r[n].call(t.exports,t,t.exports,__webpack_require__),t.l=!0,t.exports}var e={};return __webpack_require__.m=r,__webpack_require__.c=e,__webpack_require__.i=function(r){return r},__webpack_require__.d=function(r,e,n){__webpack_require__.o(r,e)||Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:n})},__webpack_require__.n=function(r){var e=r&&r.__esModule?function getDefault(){return r.default}:function getModuleExports(){return r};return __webpack_require__.d(e,"a",e),e},__webpack_require__.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=1)}([function(r,e,n){"use strict";function isInt(r){return r%1==0}function isFiniteNumber(r){return Number(r)===r&&isFinite(r)}function StringToUTF16Array(r){return r.split("").map(function(r){return r.charCodeAt(0)})}function UTF16ArrayToString(r){return String.fromCharCode.apply(null,r)}function UTF16ArrayToDec(r){for(var e=0,n=0,o=r.length-1;o>=0;o--)e+=r[o]*Math.pow(t,n),n++;return e}function DecToUTF16Array(r){for(var e=[];r;){var n=r%t;e.unshift(n),r=Math.floor(r/t)}return e}function getCount(r,e){return Array.isArray(r)&&Array.isArray(e)&&(r=UTF16ArrayToDec(r),e=UTF16ArrayToDec(e)),Math.abs(r-e)}function compare(r,e){return Array.isArray(r)&&Array.isArray(e)&&(r=UTF16ArrayToDec(r),e=UTF16ArrayToDec(e)),r>e?1:r<e?-1:0}function inc(r){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Array.isArray(r)?DecToUTF16Array(UTF16ArrayToDec(r)+e):r+e}function sqnc(r,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,t=arguments[3],o=[];if("function"==typeof r&&isFinite(e)){for(var i=0,a=0;a<e;a++)i=r(a,i,o),o.push(i);return o}null!=e&&null!=t&&(t=null,console.warn('"count" argument is ignored when "to" argument is specified'));var u=null!=t;if(u||null!=r&&null!=e&&null!=n){var c=!1,s=r;if("string"==typeof r&&(r=StringToUTF16Array(r),c=!0,n&&"function"!=typeof n&&!isInt(n)))throw new Error("Step should be integer when characters are used");if(u){if(0===t)throw new Error("count can't be zero!");if(t>sqnc.maxLength)throw new Error("length of the generated squence cant't be bigger then "+sqnc.maxLength+" (you can change it: sqnc.maxLength = <max seqence length>)");if(!isFiniteNumber(t))throw new Error("count should be a number!");t=Math.abs(t);var f=t,_=r;if(n){if(!c&&!isFiniteNumber(r))throw new Error('"from" argument should be number or character when "step" and "count" specified!');for(var p=0;f;)p++,o.push(c?UTF16ArrayToString(_):_),_=inc(_,"function"==typeof n?n(p,_):n),f--}else for(;f;)o.push(s),f--}else{if("string"==typeof e&&(e=StringToUTF16Array(e),c=!0),!Array.isArray(r)&&!isFiniteNumber(r)||!Array.isArray(e)&&!isFiniteNumber(e)||!isFiniteNumber(n)&&"function"!=typeof n)throw new Error("arguments should be finite!");if(getCount(r,e)>sqnc.maxLength)throw new Error("length of the generated squence cant't be bigger then "+sqnc.maxLength+" (you can change it: sqnc.maxLength = <max seqence length>)");if("function"!=typeof n&&0===(n=Math.abs(n)))throw new Error('"step" argument can\'t be zero!');var y=1,l=void 0;compare(r,e)>0?(y=-1,l=function check(r){return compare(r,e)>=0}):l=function check(r){return compare(r,e)<=0};for(var h=0,g=r;l(g);)h++,o.push(c?UTF16ArrayToString(g):g),g=inc(g,y*("function"==typeof n?n(h,g,o):n))}}return o}Object.defineProperty(e,"__esModule",{value:!0});var t=65536;sqnc.maxLength=t,sqnc.utils={inc:inc,compare:compare,isInt:isInt,isFiniteNumber:isFiniteNumber,StringToUTF16Array:StringToUTF16Array,UTF16ArrayToString:UTF16ArrayToString,DecToUTF16Array:DecToUTF16Array,UTF16ArrayToDec:UTF16ArrayToDec},e.default=sqnc},function(r,e,n){r.exports=n(0).default}])});
//# sourceMappingURL=sqnc.min.js.map